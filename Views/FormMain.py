# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'FormMain.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QAction
import tkinter as tk
from tkinter import messagebox
from PyQt5.QtGui import QCursor, QIcon
import os, json, sys
from unidecode import unidecode
from Libs.Calibration import Calibration


class Ui_MainWindow(QtWidgets.QMainWindow):
    def setupUi(self):
        self.modo= "exit"
        self.janela= self
        MainWindow= self
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(os.environ["USERPROFILE"] + "\\Sunshine\\Images\\Icon.ico"), QtGui.QIcon.Selected, QtGui.QIcon.On)
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(755, 755)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("background: orange")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setEnabled(True)
        self.tabWidget.setGeometry(QtCore.QRect(20, 60, 711, 531))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(16)
        self.tabWidget.setFont(font)
        self.tabWidget.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.tabWidget.setFocusPolicy(QtCore.Qt.TabFocus)
        self.tabWidget.setAutoFillBackground(False)
        self.tabWidget.setStyleSheet("background: #EEEEEE")
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.North)
        self.tabWidget.setDocumentMode(False)
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setMovable(False)
        self.tabWidget.setTabBarAutoHide(False)
        self.tabWidget.setObjectName("tabWidget")
        self.Arq = QtWidgets.QWidget()
        self.Arq.setObjectName("Arq")
        self.path = QtWidgets.QLineEdit(self.Arq)
        self.path.setGeometry(QtCore.QRect(40, 60, 631, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        self.path.setFont(font)
        self.path.setStyleSheet("border: 1px solid orange; border-radius: 10px")
        self.path.setText("")
        self.path.setAlignment(QtCore.Qt.AlignCenter)
        self.path.setDragEnabled(False)
        self.path.setClearButtonEnabled(False)
        self.path.setObjectName("path")
        self.groupBox = QtWidgets.QGroupBox(self.Arq)
        self.groupBox.setGeometry(QtCore.QRect(500, 129, 161, 101))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.groupBox.setFont(font)
        self.groupBox.setAutoFillBackground(False)
        self.groupBox.setStyleSheet("border: 1px solid gray; border-radius: 10px")
        self.groupBox.setAlignment(QtCore.Qt.AlignCenter)
        self.groupBox.setFlat(False)
        self.groupBox.setCheckable(True)
        self.groupBox.setObjectName("groupBox")
        self.sup = QtWidgets.QSpinBox(self.groupBox)
        self.sup.setGeometry(QtCore.QRect(50, 40, 71, 31))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.sup.setFont(font)
        self.sup.setStyleSheet("border-radius: 5px")
        self.sup.setAlignment(QtCore.Qt.AlignCenter)
        self.sup.setMinimum(1)
        self.sup.setObjectName("sup")
        self.groupBox_2 = QtWidgets.QGroupBox(self.Arq)
        self.groupBox_2.setGeometry(QtCore.QRect(500, 260, 161, 101))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.groupBox_2.setFont(font)
        self.groupBox_2.setAutoFillBackground(False)
        self.groupBox_2.setStyleSheet("border: 1px solid gray; border-radius: 10px")
        self.groupBox_2.setAlignment(QtCore.Qt.AlignCenter)
        self.groupBox_2.setFlat(False)
        self.groupBox_2.setCheckable(True)
        self.groupBox_2.setObjectName("groupBox_2")
        self.inf = QtWidgets.QSpinBox(self.groupBox_2)
        self.inf.setGeometry(QtCore.QRect(50, 40, 71, 31))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.inf.setFont(font)
        self.inf.setStyleSheet("border-radius: 5px")
        self.inf.setAlignment(QtCore.Qt.AlignCenter)
        self.inf.setMinimum(1)
        self.inf.setObjectName("inf")
        self.vestibular = QtWidgets.QLineEdit(self.Arq)
        self.vestibular.setGeometry(QtCore.QRect(40, 130, 411, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        self.vestibular.setFont(font)
        self.vestibular.setStyleSheet("border: 1px solid orange; border-radius: 10px")
        self.vestibular.setText("")
        self.vestibular.setAlignment(QtCore.Qt.AlignCenter)
        self.vestibular.setDragEnabled(False)
        self.vestibular.setClearButtonEnabled(False)
        self.vestibular.setObjectName("vestibular")
        self.lingual = QtWidgets.QLineEdit(self.Arq)
        self.lingual.setGeometry(QtCore.QRect(40, 200, 411, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        self.lingual.setFont(font)
        self.lingual.setStyleSheet("border: 1px solid orange; border-radius: 10px")
        self.lingual.setText("")
        self.lingual.setAlignment(QtCore.Qt.AlignCenter)
        self.lingual.setDragEnabled(False)
        self.lingual.setClearButtonEnabled(False)
        self.lingual.setObjectName("lingual")
        self.oclusal = QtWidgets.QLineEdit(self.Arq)
        self.oclusal.setGeometry(QtCore.QRect(40, 270, 411, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        self.oclusal.setFont(font)
        self.oclusal.setStyleSheet("border: 1px solid orange; border-radius: 10px")
        self.oclusal.setText("")
        self.oclusal.setAlignment(QtCore.Qt.AlignCenter)
        self.oclusal.setDragEnabled(False)
        self.oclusal.setClearButtonEnabled(False)
        self.oclusal.setObjectName("oclusal")
        self.pacote = QtWidgets.QComboBox(self.Arq)
        self.pacote.setGeometry(QtCore.QRect(40, 340, 99, 27))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.pacote.setFont(font)
        self.pacote.setStyleSheet("border-radius: 10px; border: 1px solid orange; ")
        self.pacote.setEditable(False)
        self.pacote.setInsertPolicy(QtWidgets.QComboBox.InsertAtTop)
        self.pacote.setSizeAdjustPolicy(QtWidgets.QComboBox.AdjustToContents)
        self.pacote.setObjectName("pacote")
        self.pacote.addItem("")
        self.pacote.addItem("")
        self.pacote.addItem("")
        self.pacote.addItem("")
        self.pacote.addItem("")
        self.pacote.addItem("")
        self.pacote.addItem("")
        self.pacote.addItem("")
        self.pacote.addItem("")
        self.pacote.addItem("")
        self.pacote.addItem("")
        self.pacote.addItem("")
        self.pacote.addItem("")
        self.pacote.addItem("")
        self.pacote.addItem("")
        self.pacote.addItem("")
        self.pacote.addItem("")
        self.pacote.addItem("")
        self.pacote.addItem("")
        self.pacote.addItem("")
        self.comentario = QtWidgets.QTextEdit(self.Arq)
        self.comentario.setGeometry(QtCore.QRect(40, 390, 621, 71))
        self.comentario.setStyleSheet("border-radius: 10px; border: 1px solid orange")
        self.comentario.setObjectName("comentario")
        self.prazo = QtWidgets.QLineEdit(self.Arq)
        self.prazo.setGeometry(QtCore.QRect(210, 340, 251, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.prazo.setFont(font)
        self.prazo.setStyleSheet("border: 1px solid orange; border-radius: 10px")
        self.prazo.setText("")
        self.prazo.setAlignment(QtCore.Qt.AlignCenter)
        self.prazo.setDragEnabled(False)
        self.prazo.setClearButtonEnabled(False)
        self.prazo.setObjectName("prazo")
        self.diagnostico = QtWidgets.QCheckBox(self.Arq)
        self.diagnostico.setGeometry(QtCore.QRect(50, 20, 121, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.diagnostico.setFont(font)
        self.diagnostico.setStyleSheet("")
        self.diagnostico.setObjectName("diagnostico")
        self.diagnostico.stateChanged.connect(self.desativaParaDiagnostico)
        self.tabWidget.addTab(self.Arq, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.paciente = QtWidgets.QLineEdit(self.tab_2)
        self.paciente.setGeometry(QtCore.QRect(40, 160, 631, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        self.paciente.setFont(font)
        self.paciente.setStyleSheet("border: 1px solid orange; border-radius: 10px")
        self.paciente.setText("")
        self.paciente.setAlignment(QtCore.Qt.AlignCenter)
        self.paciente.setDragEnabled(False)
        self.paciente.setClearButtonEnabled(False)
        self.paciente.setObjectName("paciente")
        self.ortodontista = QtWidgets.QComboBox(self.tab_2)
        self.ortodontista.setGeometry(QtCore.QRect(40, 60, 631, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.ortodontista.setFont(font)
        self.ortodontista.setStyleSheet("border-radius: 10px; border: 1px solid orange")
        self.ortodontista.setEditable(False)
        self.ortodontista.setMaxVisibleItems(10)
        self.ortodontista.setInsertPolicy(QtWidgets.QComboBox.InsertAtTop)
        self.ortodontista.setObjectName("ortodontista")
        self.ortodontista.addItem("")
        self.ortodontista.addItem("")
        self.ortodontista.addItem("")
        self.ortodontista.addItem("")
        self.ortodontista.addItem("")
        self.ortodontista.addItem("")
        self.ortodontista.addItem("")
        self.dentista = QtWidgets.QLineEdit(self.tab_2)
        self.dentista.setGeometry(QtCore.QRect(40, 270, 631, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        self.dentista.setFont(font)
        self.dentista.setStyleSheet("border: 1px solid orange; border-radius: 10px")
        self.dentista.setText("")
        self.dentista.setAlignment(QtCore.Qt.AlignCenter)
        self.dentista.setDragEnabled(False)
        self.dentista.setClearButtonEnabled(False)
        self.dentista.setObjectName("dentista")
        self.OS = QtWidgets.QLineEdit(self.tab_2)
        self.OS.setGeometry(QtCore.QRect(40, 370, 631, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        self.OS.setFont(font)
        self.OS.setStyleSheet("border: 1px solid orange; border-radius: 10px")
        self.OS.setText("")
        self.OS.setAlignment(QtCore.Qt.AlignCenter)
        self.OS.setDragEnabled(False)
        self.OS.setClearButtonEnabled(False)
        self.OS.setObjectName("OS")
        self.tabWidget.addTab(self.tab_2, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.capturas = QtWidgets.QCheckBox(self.tab)
        self.capturas.setGeometry(QtCore.QRect(60, 40, 111, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.capturas.sizePolicy().hasHeightForWidth())
        self.capturas.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(16)
        self.capturas.setFont(font)
        self.capturas.setIconSize(QtCore.QSize(16, 16))
        self.capturas.setChecked(True)
        self.capturas.setTristate(False)
        self.capturas.setObjectName("capturas")
        self.relatorioipr = QtWidgets.QCheckBox(self.tab)
        self.relatorioipr.setGeometry(QtCore.QRect(60, 120, 181, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.relatorioipr.sizePolicy().hasHeightForWidth())
        self.relatorioipr.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(16)
        self.relatorioipr.setFont(font)
        self.relatorioipr.setIconSize(QtCore.QSize(16, 16))
        self.relatorioipr.setChecked(True)
        self.relatorioipr.setTristate(False)
        self.relatorioipr.setObjectName("relatorioipr")
        self.otimizargifs = QtWidgets.QCheckBox(self.tab)
        self.otimizargifs.setGeometry(QtCore.QRect(60, 160, 181, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.otimizargifs.sizePolicy().hasHeightForWidth())
        self.otimizargifs.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(16)
        self.otimizargifs.setFont(font)
        self.otimizargifs.setIconSize(QtCore.QSize(16, 16))
        self.otimizargifs.setChecked(True)
        self.otimizargifs.setTristate(False)
        self.otimizargifs.setObjectName("otimizargifs")
        self.otimizarstls = QtWidgets.QCheckBox(self.tab)
        self.otimizarstls.setGeometry(QtCore.QRect(60, 200, 181, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.otimizarstls.sizePolicy().hasHeightForWidth())
        self.otimizarstls.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(16)
        self.otimizarstls.setFont(font)
        self.otimizarstls.setIconSize(QtCore.QSize(16, 16))
        self.otimizarstls.setChecked(True)
        self.otimizarstls.setTristate(False)
        self.otimizarstls.setObjectName("otimizarstls")
        self.relatorios1214 = QtWidgets.QCheckBox(self.tab)
        self.relatorios1214.setGeometry(QtCore.QRect(60, 80, 341, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.relatorios1214.sizePolicy().hasHeightForWidth())
        self.relatorios1214.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(16)
        self.relatorios1214.setFont(font)
        self.relatorios1214.setIconSize(QtCore.QSize(16, 16))
        self.relatorios1214.setChecked(True)
        self.relatorios1214.setTristate(False)
        self.relatorios1214.setObjectName("relatorios1214")
        self.tabWidget.addTab(self.tab, "")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(570, 10, 181, 41))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(28)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("color: white")
        self.label.setObjectName("label")
        self.pronto = QtWidgets.QPushButton(self.centralwidget)
        self.pronto.setGeometry(QtCore.QRect(460, 610, 171, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.pronto.setFont(font)
        self.pronto.setStyleSheet("QPushButton{border-radius: 5px; background: green; color: white} QPushButton:hover{background: #09ab0e}")
        self.pronto.setObjectName("pronto")
        self.pronto.setCursor(QCursor(QtCore.Qt.PointingHandCursor))
        self.pronto.clicked.connect(self.formend)
        self.anterior = QtWidgets.QPushButton(self.centralwidget)
        self.anterior.setGeometry(QtCore.QRect(210, 610, 171, 51))
        self.anterior.setCursor(QCursor(QtCore.Qt.PointingHandCursor))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.anterior.setFont(font)
        self.anterior.setStyleSheet("QPushButton{border-radius: 5px; background: green; color: white} QPushButton:hover{background: #09ab0e}")
        self.anterior.setObjectName("anterior")
        self.anterior.clicked.connect(self.formant)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 755, 21))
        self.menubar.setObjectName("menubar")
        self.menubar.setStyleSheet("background: white; color: black")
        self.actionCalibration= QAction("Calibração", MainWindow)
        self.actionExport= QAction("Exportar", MainWindow)
        self.actionImport= QAction("Importar", MainWindow)
        self.versionFile= QAction("Versão", MainWindow)
        actionFile = self.menubar.addMenu("Configurações")
        actionFile.addAction(self.actionCalibration)
        actionFile.addAction(self.actionExport)
        actionFile.addAction(self.actionImport)
        versionFile = self.menubar.addMenu("Detalhes")
        versionFile.addAction(self.versionFile)
        self.actionCalibration.triggered.connect(Calibration)
        self.actionExport.triggered.connect(self.Export)
        self.actionImport.triggered.connect(self.Import)
        self.versionFile.triggered.connect(self.versionApp)
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionanterior = QtWidgets.QAction(MainWindow)
        self.actionanterior.setObjectName("actionanterior")
        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        self.ortodontista.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
    def versionApp(self):
        arq= open(os.environ["USERPROFILE"] + "\\Sunshine\\.version","r")
        versao= arq.readlines()[0]
        arq.close()
        display= tk.Tk()
        display.title("Sunshine - Versão atual")
        display.geometry("300x250")
        display.config(bg="orange", padx="30px", pady="30px")
        display.iconbitmap(os.environ["USERPROFILE"] + "\\Sunshine\\Images\\Icon.ico")
        label= tk.Label(display, text=f"Sunshine {versao}", fg="white", bg="orange", font="Arial 20")
        label.pack()
        btn= tk.Button(display, text="Fechar", relief="flat",bg="green", fg="white", font="Arial 13", command= display.destroy)
        btn.pack(pady="30px")
        display.mainloop()
    
    def closeEvent(self,event):
        if(self.modo == "exit"):
            sys.exit()
    def Export(self):
        self.iodisplay= tk.Tk()
        self.iodisplay.title("Sunshine - Exportação")
        self.iodisplay.config(bg="orange",padx="30px",pady="30px")
        label= tk.Label(self.iodisplay, text="Cole o caminho da pasta para exportação", font="arial 20", fg="white", bg="orange")
        label.pack(pady="10px")
        self.iocaminho= tk.Entry(self.iodisplay, font="arial 16", justify="center")
        self.iocaminho.pack(pady="10px")
        self.iobtn= tk.Button(self.iodisplay, text="Exportar",font="arial 16", bg="green", fg="white", relief="flat", command=self.ExportOK)
        self.iobtn.pack(pady="10px")
        self.iodisplay.mainloop()
    def ExportOK(self):
        arquivo= open(os.environ["USERPROFILE"] + "\\Sunshine\\coords.json", "r")
        cache= json.loads(arquivo.readlines()[0])
        print(cache)
        arquivo.close()
        novo= open(self.iocaminho.get() + "\\coords.json","w")
        novo.write(json.dumps(cache))
        novo.close()
        messagebox.showinfo("Sunshine","Exportado com sucesso!")
        self.iodisplay.destroy()
    def Import(self):
        self.iodisplay= tk.Tk()
        self.iodisplay.title("Sunshine - Exportação")
        self.iodisplay.config(bg="orange",padx="30px",pady="30px")
        label= tk.Label(self.iodisplay, text="Cole o caminho da pasta para importação", font="arial 20", fg="white", bg="orange")
        label.pack(pady="10px")
        self.iocaminho= tk.Entry(self.iodisplay, font="arial 16", justify="center")
        self.iocaminho.pack(pady="10px")
        self.iobtn= tk.Button(self.iodisplay, text="Importar",font="arial 16", bg="green", fg="white", relief="flat", command=self.ImportOK)
        self.iobtn.pack(pady="10px")
        self.iodisplay.mainloop()
    def ImportOK(self):
        arquivo= open(self.iocaminho.get() + "\\coords.json", "r")
        cache= json.loads(arquivo.readlines()[0])
        arquivo.close()
        novo= open(os.environ["USERPROFILE"] + "\\Sunshine\\coords.json","w")
        novo.write(json.dumps(cache))
        novo.close()
        messagebox.showinfo("Sunshine","Importado com sucesso!")
        self.iodisplay.destroy()
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Sunshine"))
        self.path.setPlaceholderText(_translate("MainWindow", "Cole o caminho da pasta aqui"))
        self.groupBox.setTitle(_translate("MainWindow", "Sup"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Inf"))
        self.vestibular.setPlaceholderText(_translate("MainWindow", "Vestibular"))
        self.lingual.setPlaceholderText(_translate("MainWindow", "Lingual"))
        self.oclusal.setPlaceholderText(_translate("MainWindow", "Oclusal"))
        self.pacote.setItemText(0, _translate("MainWindow", "SIX"))
        self.pacote.setItemText(1, _translate("MainWindow", "LITE"))
        self.pacote.setItemText(2, _translate("MainWindow", "FULL"))
        self.pacote.setItemText(3, _translate("MainWindow", "ONE"))
        self.pacote.setItemText(4, _translate("MainWindow", "Fase II"))
        self.pacote.setItemText(5, _translate("MainWindow", "Fase III"))
        self.pacote.setItemText(6, _translate("MainWindow", "Fase IV"))
        self.pacote.setItemText(7, _translate("MainWindow", "Fase V"))
        self.pacote.setItemText(8, _translate("MainWindow", "Fase VI"))
        self.pacote.setItemText(9, _translate("MainWindow", "Refino I"))
        self.pacote.setItemText(10, _translate("MainWindow", "Refino II"))
        self.pacote.setItemText(11, _translate("MainWindow", "Refino III"))
        self.pacote.setItemText(12, _translate("MainWindow", "Refino IV"))
        self.pacote.setItemText(13, _translate("MainWindow", "Refino V"))
        self.pacote.setItemText(14, _translate("MainWindow", "Refino VI"))
        self.pacote.setItemText(15, _translate("MainWindow", "Não tem"))
        self.pacote.setItemText(16, _translate("MainWindow", "PRO"))
        self.pacote.setItemText(17, _translate("MainWindow", "2 PRO"))
        self.pacote.setItemText(18, _translate("MainWindow", "CLUB"))
        self.pacote.setItemText(19, _translate("MainWindow", "KIDS"))
        self.comentario.setPlaceholderText(_translate("MainWindow", "Comentário"))
        self.prazo.setPlaceholderText(_translate("MainWindow", "Prazo"))
        self.diagnostico.setText(_translate("MainWindow", "Diagnóstico"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Arq), _translate("MainWindow", "Relatório"))
        self.paciente.setPlaceholderText(_translate("MainWindow", "Nome do Paciente"))
        self.ortodontista.setItemText(0, _translate("MainWindow", "Selecione um Ortodontista"))
        self.ortodontista.setItemText(1, _translate("MainWindow", "Diogo Frazão"))
        self.ortodontista.setItemText(2, _translate("MainWindow", "Luisa Thayrine"))
        self.ortodontista.setItemText(3, _translate("MainWindow", "Alessandra Raid"))
        self.ortodontista.setItemText(4, _translate("MainWindow", "Bruno Gribel"))
        self.ortodontista.setItemText(5, _translate("MainWindow", "Cassia dos Anjos"))
        self.ortodontista.setItemText(6, _translate("MainWindow", "Marcos Gribel"))
        self.dentista.setPlaceholderText(_translate("MainWindow", "Nome do Dentista"))
        self.OS.setPlaceholderText(_translate("MainWindow", "Número da OS"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Agentes"))
        self.capturas.setText(_translate("MainWindow", "Capturas"))
        self.relatorioipr.setText(_translate("MainWindow", "Relatório de IPR"))
        self.otimizargifs.setText(_translate("MainWindow", "Otimizar GIFs"))
        self.otimizarstls.setText(_translate("MainWindow", "Otimizar STLs"))
        self.relatorios1214.setText(_translate("MainWindow", "Relatório de Instruções e Resumo"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Etapas"))
        self.label.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\">Sunshine</p></body></html>"))
        self.pronto.setText(_translate("MainWindow", "Pronto"))
        self.anterior.setText(_translate("MainWindow", "Usar Anterior"))
        self.actionanterior.setText(_translate("MainWindow", "anterior"))
    def desativaParaDiagnostico(self):
        if(self.diagnostico.isChecked() == True):
            self.desativarQline(self.vestibular)
            self.desativarQline(self.lingual)
            self.desativarQline(self.oclusal)
            self.desativarQline(self.prazo)
            self.desativarQline(self.pacote)
            self.groupBox.setDisabled(True)
            self.groupBox_2.setDisabled(True)   
        else:
            self.ativarQline(self.vestibular)
            self.ativarQline(self.lingual)
            self.ativarQline(self.oclusal)
            self.ativarQline(self.prazo)
            self.ativarQline(self.pacote)
            self.groupBox.setEnabled(True)
            self.groupBox_2.setEnabled(True)
    def desativarQline(self, item):
        item.setDisabled(True)
        item.setStyleSheet("border: 1px solid #CCCCCC; background-color: #EEEEEE; border-radius: 10px")
    def ativarQline(self, item):
        item.setEnabled(True)
        item.setStyleSheet("border: 1px solid orange; background-color: white; border-radius: 10px")
    def formend(self):
        self.db= {}
        self.file= open(os.environ["USERPROFILE"] + "\\Sunshine\\Cache\\FormMain.cache","w")
        if(self.diagnostico.isChecked() == True):
            self.Diagnostico()
        else:
            self.Setup()
        self.db["comentario"] += "||"
        self.db["comentario"]= self.db["comentario"].replace("\n","||") 
        self.db["relatorios1214"]= self.relatorios1214.isChecked()
        self.db["capturas"] = self.capturas.isChecked()
        self.db["relatorioipr"]= self.relatorioipr.isChecked()
        self.db["diagnostico"]= self.diagnostico.isChecked()
        self.db["otimizargifs"]= self.otimizargifs.isChecked()
        self.db["otimizarstls"]= self.otimizarstls.isChecked()
        self.file.write(json.dumps(self.db))
        self.modo= "natural"
        self.file.close()
        self.janela.close()
    def formant(self):
        print("EVOU EXECUTAR")
        self.file= open(os.environ["USERPROFILE"] + "\\Sunshine\\Cache\\FormMain.cache","r")
        file= self.file.readlines()[0]
        self.db= json.loads(file)
        self.db["relatorios1214"]= self.relatorios1214.isChecked()
        self.db["capturas"] = self.capturas.isChecked()
        self.db["relatorioipr"]= self.relatorioipr.isChecked()
        self.db["diagnostico"]= self.diagnostico.isChecked()
        self.db["otimizargifs"]= self.otimizargifs.isChecked()
        self.db["otimizarstls"]= self.otimizarstls.isChecked()
        self.file.close()
        self.file= open(os.environ["USERPROFILE"] + "\\Sunshine\\Cache\\FormMain.cache","w")
        file= json.dumps(self.db)
        self.file.write(file)
        self.modo= "natural"
        self.file.close()
        self.janela.close()
    def Diagnostico(self):
        self.db["paciente"] = unidecode(self.paciente.text().title())
        self.db["path"]= self.path.text()
        self.db["dentista"] = unidecode(self.dentista.text().title())
        self.db["ortodontista"]= str(self.ortodontista.currentText())
        self.db["prazo"]= self.prazo.text()
        self.db["comentario"]= self.comentario.toPlainText()
        self.db["vestibular"] = "-"
        self.db["lingual"] = "-"
        self.db["oclusal"] = "-"
        self.db["sup"]= "0"
        self.db["inf"]= "0"
        self.db["pacote"]= "Diagnostico"
        self.db["setup"]= self.db["path"].split("\\")[len(self.db["path"].split("\\"))-1]
        self.db["os"]= self.OS.text()
    def Setup(self):
        print(self.paciente.text())
        self.db["paciente"] = unidecode(self.paciente.text().title())
        self.db["path"]= self.path.text()
        self.db["dentista"] = unidecode(self.dentista.text().title())
        self.db["ortodontista"]= str(self.ortodontista.currentText())
        self.db["prazo"]= self.prazo.text()
        self.db["comentario"]= self.comentario.toPlainText()
        self.db["vestibular"] = self.vestibular.text()
        self.db["lingual"] = self.lingual.text()
        self.db["oclusal"] = self.oclusal.text()
        if(self.groupBox.isChecked() == True):
            self.db["sup"]= self.sup.value()
        else:
            self.db["sup"]= "0"
        if(self.groupBox_2.isChecked() == True):
            self.db["inf"]= self.inf.value()
        else:
            self.db["inf"]= "0"
        self.db["pacote"]= str(self.pacote.currentText())
        if(self.db["pacote"] == "Não tem"):
            self.db["pacote"]= " "
        self.db["setup"]= self.db["path"].split("\\")[len(self.db["path"].split("\\"))-1]
        self.db["os"]= self.OS.text()
class Execute:
    def __init__(self):
        import sys
        app = QtWidgets.QApplication(sys.argv)
        ui = Ui_MainWindow()
        ui.setupUi()
        ui.show()
        app.exec_()